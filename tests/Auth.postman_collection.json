{
	"info": {
		"_postman_id": "8eb65de0-1076-43ca-833a-308a3c94e0a9",
		"name": "Auth",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33965033"
	},
	"item": [
		{
			"name": "{{base_url}}/register/pass",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstname\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));\r",
							"pm.collectionVariables.set(\"lastname\", pm.variables.replaceIn(\"{{$randomLastName}}\"));\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));\r",
							"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));\r",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Base Case: Successful registration\r",
							"pm.test(\"User successfully registered\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.expect(response).to.have.property(\"accessToken\");\r",
							"    pm.expect(response).to.have.property(\"id\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"bfg!@123Letsgo\",\r\n    \"username\": \"{{username}}\",\r\n    \"role\": 5,\r\n    \"phone\": \"{{phone}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/register/duplicate_email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstname\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));\r",
							"pm.collectionVariables.set(\"lastname\", pm.variables.replaceIn(\"{{$randomLastName}}\"));\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));\r",
							"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));\r",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Email already exists\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Email exists\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"email\": \"not@email.com\",\r\n    \"password\": \"bfg!@123Letsgo\",\r\n    \"username\": \"{{username}}\",\r\n    \"role\": 5,\r\n    \"phone\": \"{{phone}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/register/duplicate_username",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstname\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));\r",
							"pm.collectionVariables.set(\"lastname\", pm.variables.replaceIn(\"{{$randomLastName}}\"));\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));\r",
							"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));\r",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Username already exists\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Username exists\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"bfg!@123Letsgo\",\r\n    \"username\": \"bill\",\r\n    \"role\": 5,\r\n    \"phone\": \"{{phone}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/register/missing_params",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstname\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));\r",
							"pm.collectionVariables.set(\"lastname\", pm.variables.replaceIn(\"{{$randomLastName}}\"));\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));\r",
							"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));\r",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Missing parameters\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Missing required information\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"bfg!@123Letsgo\",\r\n    \"username\": \"bill\",\r\n    \"role\": 5,\r\n    \"phone\": \"{{phone}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/register/invalid_phone",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstname\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));\r",
							"pm.collectionVariables.set(\"lastname\", pm.variables.replaceIn(\"{{$randomLastName}}\"));\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));\r",
							"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));\r",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Invalid/Missing Phone\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Invalid or missing phone number  - please refer to documentation\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"AA11..%%marrokiscool\",\r\n    \"username\": \"{{username}}\",\r\n    \"role\": 5,\r\n    \"phone\": \"123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/register/invalid_password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstname\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));\r",
							"pm.collectionVariables.set(\"lastname\", pm.variables.replaceIn(\"{{$randomLastName}}\"));\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));\r",
							"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));\r",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Invalid/Missing Password\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Invalid or missing password  - please refer to documentation\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"bfg\",\r\n    \"username\": \"{{username}}\",\r\n    \"role\": 5,\r\n    \"phone\": \"{{phone}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/register/invalid_email",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstname\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));\r",
							"pm.collectionVariables.set(\"lastname\", pm.variables.replaceIn(\"{{$randomLastName}}\"));\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));\r",
							"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));\r",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Invalid/Missing Email\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Invalid or missing email  - please refer to documentation\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"email\": \"marrok@wrong\",\r\n    \"password\": \"IamS0Awesome!!!!!!\",\r\n    \"username\": \"{{username}}\",\r\n    \"role\": 5,\r\n    \"phone\": \"{{phone}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/register/invalid_role",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"firstname\", pm.variables.replaceIn(\"{{$randomFirstName}}\"));\r",
							"pm.collectionVariables.set(\"lastname\", pm.variables.replaceIn(\"{{$randomLastName}}\"));\r",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));\r",
							"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));\r",
							"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn(\"{{$randomPhoneNumber}}\"));"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Invalid/Missing Role\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Invalid or missing role  - please refer to documentation\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\": \"{{firstname}}\",\r\n    \"lastname\": \"{{lastname}}\",\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"IamS0Awesome!!!!!!\",\r\n    \"username\": \"{{username}}\",\r\n    \"role\": 100,\r\n    \"phone\": \"{{phone}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/hash_demo/hash_passes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/hash_demo",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"hash_demo"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/login/pass",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"// Base Case: Successful registration\r",
							"pm.test(\"User successfully logged in\", () => {\r",
							"    pm.response.to.have.status(201);\r",
							"    pm.expect(response).to.have.property(\"accessToken\");\r",
							"    pm.expect(response).to.have.property(\"id\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Nils_Tillman30\",\r\n    \"password\": \"bfg!@123Letsgo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/login/missing_password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Missing password/username or both\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Missing password/username or both\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"Nils_Tillman30\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/login/missing_email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Missing password/username or both\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Missing password/username or both\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"password\": \"bfg!@123Letsgo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/login/missing_password_and_email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Missing password/username or both\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Missing password/username or both\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/login/invalid_credentials",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 400\", () => {\r",
							"    pm.response.to.have.status(400);\r",
							"})\r",
							"\r",
							"pm.test(\"Credientals didnt match\", () => {\r",
							"    if (pm.response.code === 400) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"Credentials did not match\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Nils_Tillman30\",\r\n    \"password\": \"bfg!@123Letsgo!\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "{{base_url}}/login/user_not_found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Change the raw text to json\r",
							"const response = pm.response.json();\r",
							"\r",
							"pm.test(\"Response status should be 404\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"})\r",
							"\r",
							"pm.test(\"Credientals didnt match\", () => {\r",
							"    if (pm.response.code === 404) {\r",
							"        pm.expect(response).to.haveOwnProperty(\"message\", \"User not found\");\r",
							"    }\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Nils\",\r\n    \"password\": \"bfg!@123Letsgo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"{\r",
					"    \"email\": \"testuser@example.com\",\r",
					"    \"password\": \"ValidPassword123!\"\r",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "firstname",
			"value": ""
		},
		{
			"key": "lastname",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "phone",
			"value": ""
		}
	]
}